import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as n,f as a}from"./app.4d667c68.js";const s={},r=a(`<h1 id="nacos" tabindex="-1"><a class="header-anchor" href="#nacos" aria-hidden="true">#</a> nacos</h1><h2 id="\u57FA\u672C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u539F\u7406" aria-hidden="true">#</a> \u57FA\u672C\u539F\u7406</h2><h3 id="\u542F\u52A8\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#\u542F\u52A8\u521D\u59CB\u5316" aria-hidden="true">#</a> \u542F\u52A8\u521D\u59CB\u5316</h3><ol><li>\u5728\u670D\u52A1\u5668webServer\u542F\u52A8\u540E\u5C06\u53D1\u5E03WebServerInitializedEvent\u4E8B\u4EF6</li><li>NacosAutoServiceRegistration\u76D1\u542C\u5668\u76D1\u542C\u5230\u8BE5\u4E8B\u4EF6\u8FDB\u884C\u5904\u7406\uFF0C\u6CE8\u518C\u65B9\u6CD5\u662Fregister</li><li>\u6700\u540E\u8C03\u7528NacosServiceRegistry\u4E2D\u7684register\u65B9\u6CD5\uFF0C\u5B8C\u6210\u6CE8\u518C\uFF0C\u8FD9\u662F\u6CE8\u518C\u7684\u5165\u53E3</li></ol><h3 id="nacosserviceregistry" tabindex="-1"><a class="header-anchor" href="#nacosserviceregistry" aria-hidden="true">#</a> NacosServiceRegistry</h3><p>\u5728register()\u4E2D\uFF0C\u8C03\u7528\u4E86Nacos Client SDK\u4E2D\u7684this.namingService.registerInstance()\u5B8C\u6210\u670D\u52A1\u7684\u6CE8\u518C registerInstance()\u5B9E\u73B0\u7684\u4E3B\u8981\u903B\u8F91\u662F\uFF1A</p><ul><li>\u901A\u8FC7this.beatReactor.addBeatInfo()\u521B\u5EFA\u5FC3\u8DF3\u4FE1\u606F\u5B9E\u73B0\u5065\u5EB7\u68C0\u6D4B\uFF0CNacos Server\u5FC5\u987B\u8981\u786E\u4FDD\u6CE8\u518C\u7684\u670D\u52A1\u5B9E\u4F8B\u662F\u5065\u5EB7\u7684\uFF0C\u800C\u5FC3\u8DF3\u68C0\u6D4B\u5C31\u662F\u670D\u52A1\u5065\u5EB7\u76D1\u6D4B\u7684\u624B\u6BB5\u3002</li><li>\u901A\u8FC7this.serverProxy.registerService()\u5B9E\u73B0\u670D\u52A1\u6CE8\u518C\u3002</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>public void registerInstance(String serviceName, String groupName, Instance instance) throws NacosException {
        NamingUtils.checkInstanceIsLegal(instance);
        String groupedServiceName = NamingUtils.getGroupedName(serviceName, groupName);
        if (instance.isEphemeral()) {
            BeatInfo beatInfo = this.beatReactor.buildBeatInfo(groupedServiceName, instance);
            this.beatReactor.addBeatInfo(groupedServiceName, beatInfo);
        }

        this.serverProxy.registerService(groupedServiceName, groupName, instance);
    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5FC3\u8DF3\u76D1\u6D4B\u903B\u8F91" tabindex="-1"><a class="header-anchor" href="#\u5FC3\u8DF3\u76D1\u6D4B\u903B\u8F91" aria-hidden="true">#</a> \u5FC3\u8DF3\u76D1\u6D4B\u903B\u8F91</h3><p>\u5BA2\u6237\u7AEF\u901A\u8FC7\u5B9A\u5236\u4EFB\u52A1\u5411\u670D\u52A1\u7AEF\u53D1\u9001\u4E00\u4E2A\u6570\u636E\u5305\uFF0C\u7136\u540E\u542F\u52A8\u4E00\u4E2A\u7EBF\u7A0B\u4E0D\u65AD\u5730\u68C0\u6D4B\u670D\u52A1\u7AEF\u7684\u56DE\u5E94\uFF0C\u5982\u679C\u5728\u8BBE\u5B9A\u65F6\u95F4\u5185\u6CA1\u6709\u6536\u5230\u670D\u52A1\u7AEF\u7684\u56DE\u5E94\uFF0C\u5219\u8BA4\u4E3A\u670D\u52A1\u5668\u51FA\u73B0\u4E86\u6545\u969C\u3002Nacos\u670D\u52A1\u7AEF\u4F1A\u6839\u636E\u5BA2\u6237\u7AEF\u7684\u5FC3\u8DF3\u5305\u4E0D\u65AD\u66F4\u65B0\u670D\u52A1\u7684\u4FE1\u606F\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>public void addBeatInfo(String serviceName, BeatInfo beatInfo) {
        LogUtils.NAMING_LOGGER.info(&quot;[BEAT] adding beat: {} to beat map.&quot;, beatInfo);
        String key = this.buildKey(serviceName, beatInfo.getIp(), beatInfo.getPort());
        BeatInfo existBeat = null;
        if ((existBeat = (BeatInfo)this.dom2Beat.remove(key)) != null) {
            existBeat.setStopped(true);
        }

        this.dom2Beat.put(key, beatInfo);
        this.executorService.schedule(new BeatTask(beatInfo), beatInfo.getPeriod(), TimeUnit.MILLISECONDS);
        MetricsMonitor.getDom2BeatSizeMonitor().set((double)this.dom2Beat.size());
    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),t=[r];function d(c,l){return i(),n("div",null,t)}const u=e(s,[["render",d],["__file","nacos.html.vue"]]);export{u as default};
